{"version":3,"sources":["../js/serviceWorker.js","../webpack/bootstrap 81a331b87a3b3200e200","serviceworker/serviceWorker.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","866","urlsToCache","self","addEventListener","event","console","info","waitUntil","caches","open","then","cache","log","addAll","respondWith","match","request","resp","fetch","response","put","clone","catch","cacheWhitelist","keys","cacheNames","Promise","all","map","cacheName","indexOf","delete"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,ODMMC,IACA,SAAUvB,EAAQD,GEpExB,GACIyB,IACA,IACA,cACA,gBACA,iBACA,eACA,uBAEJC,MAAKC,iBAAiB,UAAW,SAAUC,GAGvCC,QAAQC,KAAK,oCACbF,EAAMG,UAAUC,OAAOC,KAbV,eAcRC,KAAK,SAAUC,GAEhB,MADAN,SAAQO,IAAI,gBACLD,EAAME,OAAOZ,QAG5BC,KAAKC,iBAAiB,QAAS,SAAUC,GACrCA,EAAMU,YAAYN,OAAOO,MAAMX,EAAMY,SAASN,KAAK,SAAUO,GACzD,MAAOA,IAAQC,MAAMd,EAAMY,SAASN,KAAK,SAAUS,GAI/C,MAHAX,QAAOC,KAtBF,eAsBmBC,KAAK,SAAUC,GACnCA,EAAMS,IAAIhB,EAAMY,QAASG,EAASE,WAE/BF,MAEZG,MAAM,WACL,MAAOd,QAAOO,MAAM,UAwC5Bb,KAAKC,iBAAiB,WAAY,SAAUC,GACxC,GAAImB,IArES,cAsEbnB,GAAMG,UAAUC,OAAOgB,OAAOd,KAAK,SAAUe,GACzC,MAAOC,SAAQC,IAAIF,EAAWG,IAAI,SAAUC,GACxC,IAA2C,IAAvCN,EAAeO,QAAQD,GACvB,MAAOrB,QAAOuB,OAAOF","file":"js/serviceWorker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 866);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 866:\n/***/ (function(module, exports) {\n\nvar CACHE_NAME='bm-mapp-app';var urlsToCache=['/','/js/main.js','/js/search.js','/css/style.css','/favicon.ico','/js/serviceWorker.js'];self.addEventListener('install',function(event){//console.log(\"service worker install event\", event);\n// Perform install steps\nconsole.info(\"'BMApp service-worker installed'\");event.waitUntil(caches.open(CACHE_NAME).then(function(cache){console.log('Opened cache');return cache.addAll(urlsToCache);}));});self.addEventListener('fetch',function(event){event.respondWith(caches.match(event.request).then(function(resp){return resp||fetch(event.request).then(function(response){caches.open(CACHE_NAME).then(function(cache){cache.put(event.request,response.clone());});return response;});}).catch(function(){return caches.match('/');}));});// self.addEventListener('fetch', function (event:any) { //FetchEvent\n//     console.log(\"service worker fetch event\", event);\n//     event.respondWith(\n//         caches.match(event.request)\n//             .then(function (response) {\n//                 console.log(\"cache match\", response);\n//                 if (response) {\n//                     return response;\n//                 }\n//                 // IMPORTANT: Clone the request. A request is a stream and\n//                 // can only be consumed once. Since we are consuming this\n//                 // once by cache and once by the browser for fetch, we need\n//                 // to clone the response.\n//                 var fetchRequest = event.request.clone();\n//                 return fetch(fetchRequest).then(\n//                     function (response) {\n//                         const isValid = (response && response.status === 200 && response.type === 'basic');\n//                         console.log(\"response is valid?\", isValid, response);\n//                         if (!isValid) {\n//                             return response;\n//                         }\n//                         // IMPORTANT: Clone the response. A response is a stream\n//                         // and because we want the browser to consume the response\n//                         // as well as the cache consuming the response, we need\n//                         // to clone it so we have two streams.\n//                         var responseToCache = response.clone();\n//                         caches.open(CACHE_NAME)\n//                             .then(function (cache) {\n//                                 console.log(\"putting in cache\", event.request);\n//                                 cache.put(event.request, responseToCache);\n//                             });\n//                         return response;\n//                     }\n//                 );\n//             })\n//     );\n// });\nself.addEventListener('activate',function(event){var cacheWhitelist=[CACHE_NAME];event.waitUntil(caches.keys().then(function(cacheNames){return Promise.all(cacheNames.map(function(cacheName){if(cacheWhitelist.indexOf(cacheName)===-1){return caches.delete(cacheName);}}));}));});//# sourceMappingURL=serviceWorker.js.map\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// js/serviceWorker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 866);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 81a331b87a3b3200e200","var CACHE_NAME = 'bm-mapp-app';\r\nvar urlsToCache = [\r\n    '/',\r\n    '/js/main.js',\r\n    '/js/search.js',\r\n    '/css/style.css',\r\n    '/favicon.ico',\r\n    '/js/serviceWorker.js'\r\n];\r\nself.addEventListener('install', function (event) {\r\n    //console.log(\"service worker install event\", event);\r\n    // Perform install steps\r\n    console.info(\"'BMApp service-worker installed'\");\r\n    event.waitUntil(caches.open(CACHE_NAME)\r\n        .then(function (cache) {\r\n        console.log('Opened cache');\r\n        return cache.addAll(urlsToCache);\r\n    }));\r\n});\r\nself.addEventListener('fetch', function (event) {\r\n    event.respondWith(caches.match(event.request).then(function (resp) {\r\n        return resp || fetch(event.request).then(function (response) {\r\n            caches.open(CACHE_NAME).then(function (cache) {\r\n                cache.put(event.request, response.clone());\r\n            });\r\n            return response;\r\n        });\r\n    }).catch(function () {\r\n        return caches.match('/');\r\n    }));\r\n});\r\n// self.addEventListener('fetch', function (event:any) { //FetchEvent\r\n//     console.log(\"service worker fetch event\", event);\r\n//     event.respondWith(\r\n//         caches.match(event.request)\r\n//             .then(function (response) {\r\n//                 console.log(\"cache match\", response);\r\n//                 if (response) {\r\n//                     return response;\r\n//                 }\r\n//                 // IMPORTANT: Clone the request. A request is a stream and\r\n//                 // can only be consumed once. Since we are consuming this\r\n//                 // once by cache and once by the browser for fetch, we need\r\n//                 // to clone the response.\r\n//                 var fetchRequest = event.request.clone();\r\n//                 return fetch(fetchRequest).then(\r\n//                     function (response) {\r\n//                         const isValid = (response && response.status === 200 && response.type === 'basic');\r\n//                         console.log(\"response is valid?\", isValid, response);\r\n//                         if (!isValid) {\r\n//                             return response;\r\n//                         }\r\n//                         // IMPORTANT: Clone the response. A response is a stream\r\n//                         // and because we want the browser to consume the response\r\n//                         // as well as the cache consuming the response, we need\r\n//                         // to clone it so we have two streams.\r\n//                         var responseToCache = response.clone();\r\n//                         caches.open(CACHE_NAME)\r\n//                             .then(function (cache) {\r\n//                                 console.log(\"putting in cache\", event.request);\r\n//                                 cache.put(event.request, responseToCache);\r\n//                             });\r\n//                         return response;\r\n//                     }\r\n//                 );\r\n//             })\r\n//     );\r\n// });\r\nself.addEventListener('activate', function (event) {\r\n    var cacheWhitelist = [CACHE_NAME];\r\n    event.waitUntil(caches.keys().then(function (cacheNames) {\r\n        return Promise.all(cacheNames.map(function (cacheName) {\r\n            if (cacheWhitelist.indexOf(cacheName) === -1) {\r\n                return caches.delete(cacheName);\r\n            }\r\n        }));\r\n    }));\r\n});\r\n//# sourceMappingURL=serviceWorker.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/serviceworker/serviceWorker.js"],"sourceRoot":""}